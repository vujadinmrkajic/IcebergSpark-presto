# version: "3.8"

# volumes:
#   minio_data:
#     driver: local

services:
  # Spark for processing data
  spark-iceberg: 
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    # networks:
    #   - iceberg_net
    # depends_on:
    #   - rest
    #   - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks
      - ./silver_layer:/home/iceberg/silver_layer
    environment:
      # - AWS_ACCESS_KEY_ID=admin
      # - AWS_SECRET_ACCESS_KEY=password
      # - AWS_REGION=us-east-1
      - SPARK_DRIVER_MEMORY=2g
      - SPARK_EXECUTOR_MEMORY=2g
    mem_limit: 4g
    ports:
      - 8889:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001

  # Iceberg REST service to interact with Iceberg tables
  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    # networks:
    #   - iceberg_net
    ports:
      - 8181:8181
    environment:
      # - AWS_ACCESS_KEY_ID=admin
      # - AWS_SECRET_ACCESS_KEY=password
      # - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=/home/iceberg/warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.hadoop.HadoopFileIO  # Use HadoopFileIO for local storage
    volumes:
      - ./warehouse:/home/iceberg/warehouse  # Bind the local directory to the container

#   # MinIO to provide data-lake like storage for Iceberg tables
#   minio:
#     image: minio/minio
#     container_name: minio
#     environment:
#       - MINIO_ROOT_USER=admin
#       - MINIO_ROOT_PASSWORD=password
#     volumes:
#       - minio_data:/data
#     networks:
#       iceberg_net:
#         aliases:
#           - warehouse.minio
#     ports:
#       - 9001:9001
#       - 9000:9000
#     command: ["server", "/data", "--console-address", ":9001"]

#   # MinIO client to configure buckets and set permissions
#   mc:
#     depends_on:
#       - minio
#     image: minio/mc
#     container_name: mc
#     networks:
#       - iceberg_net
#     environment:
#       - AWS_ACCESS_KEY_ID=admin
#       - AWS_SECRET_ACCESS_KEY=password
#     entrypoint: >
#       /bin/sh -c "
#       until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
#       /usr/bin/mc rm -r --force minio/warehouse;
#       /usr/bin/mc mb minio/warehouse;
#       /usr/bin/mc policy set public minio/warehouse;
#       tail -f /dev/null
#       "

# networks:
#   iceberg_net:
#     driver: bridge
